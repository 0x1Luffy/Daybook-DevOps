name: CI/CD Daybook Project

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-scan:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # 1Ô∏è‚É£ Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      # 3Ô∏è‚É£ Install dependencies
      - name: Install dependencies
        run: npm install

      # 4Ô∏è‚É£ Run tests (optional, uncomment if you have tests)
      # - name: Run tests
      #   run: npm test --if-present

      # 5Ô∏è‚É£ SonarCloud Scan
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}   # Required for PR decoration
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # 6Ô∏è‚É£ Pre-build Trivy scan (filesystem + dependencies)
      - name: Trivy FS Scan
        uses: aquasecurity/trivy-action@0.18.0
        with:
          scan-type: fs
          scan-ref: .
          severity: HIGH,CRITICAL
          format: table
          output: trivy-fs-report.txt

      # 7Ô∏è‚É£ Build backend Docker image
      - name: Build backend image
        run: docker build -t daybook-backend ./backend

      # 8Ô∏è‚É£ Build frontend Docker image
      - name: Build frontend image
        run: docker build -t daybook-frontend ./frontend

      # 9Ô∏è‚É£ Trivy Scan (backend image)
      - name: Trivy Scan Backend
        uses: aquasecurity/trivy-action@0.18.0
        with:
          scan-type: image
          image-ref: daybook-backend
          severity: HIGH,CRITICAL
          format: table
          output: trivy-backend-report.txt

      # üîü Trivy Scan (frontend image)
      - name: Trivy Scan Frontend
        uses: aquasecurity/trivy-action@0.18.0
        with:
          scan-type: image
          image-ref: daybook-frontend
          severity: HIGH,CRITICAL
          format: table
          output: trivy-frontend-report.txt

      # 1Ô∏è‚É£1Ô∏è‚É£ Upload Trivy Reports as Artifacts
      - name: Upload Trivy Reports as Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: trivy-reports
          path: |
            trivy-fs-report.txt
            trivy-backend-report.txt
            trivy-frontend-report.txt

      # 1Ô∏è‚É£2Ô∏è‚É£ Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 1Ô∏è‚É£3Ô∏è‚É£ Push backend image
      - name: Push backend image
        run: |
          docker tag daybook-backend ${{ secrets.DOCKER_USERNAME }}/daybook-backend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/daybook-backend:latest

      # 1Ô∏è‚É£4Ô∏è‚É£ Push frontend image
      - name: Push frontend image
        run: |
          docker tag daybook-frontend ${{ secrets.DOCKER_USERNAME }}/daybook-frontend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/daybook-frontend:latest
